type Query {
  getChats(first: Int = 10, after: String): ChatConnection!
}

type Mutation {
  createChat(memberIds: [String!]!, name: String): Chat!
  updateChatSetting(id: ID!, setting: String!): Boolean!
  notShowChat(id: ID!): Boolean!
  addGroupChatMembers(id: ID!, memberIds: [String!]!): Boolean!
  removeGroupChatMembers(id: ID!, memberIds: [String!]!): Boolean!
  deleteGroupChat(id: ID!): Boolean!
}

enum ChatType{
  P2P
  GROUP
}

type Chat {
  id: ID!
  type: ChatType!
  members: [User!]!
  pinned: Boolean!
  lastMessage: Message
  name: String
}

type Message {
  id: ID!
  content: String!
  sender: User!
  date: String!
}

type User {
  id: ID!
}

type ChatConnection {
  totalCount: Int!
  edges: [Edge!]
  pageInfo: PageInfo!
}

type Edge{
  node: Chat!
  cursor: String
}

type PageInfo{
  endCursor: String
  hasNextPage: Boolean!
}