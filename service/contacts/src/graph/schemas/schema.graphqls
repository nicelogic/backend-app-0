
type Mutation {
  # return contacts id
  removeContacts(contactsId: ID!): String!
}

type Query {
  contacts(first: Int!, after: String!): ContactsConnection!
}

type ContactsConnection {
  totalCount: Int!
  edges: [Edge!]
  pageInfo: PageInfo!
}

type Edge{
  node: Contacts!
  cursor: String!
}

type Contacts {
  id: ID!
  remarkName: String!
}

type PageInfo{
  endCursor: String
  hasNextPage: Boolean!
}
