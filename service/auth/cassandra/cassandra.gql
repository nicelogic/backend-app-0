
mutation createTables {
  auth: createTable(
    keyspaceName:"app_0",
    tableName:"auth",
    partitionKeys: [ 
      { name: "auth_id", type: {basic: TEXT} }
    ]
    clusteringKeys: [
      { name: "auth_id_type", type: {basic: TEXT} }
    ]
    values: [
      { name: "user_id", type: {basic: TEXT} }
      { name: "create_time", type: {basic: TIMESTAMP} }
      { name: "auth_id_type_username_pwd", type: {basic: TEXT} }
    ]
  )
}

mutation alterTableDrop{
  alterTableDrop(keyspaceName: "app_0", tableName:"auth", toDrop: "create_time")
}

mutation alterTableAdd{
  alterTableAdd(keyspaceName: "app_0", tableName:"auth", toAdd: { name: "create_time", type: {basic: TIMESTAMP}})
}

query GetTables {
  keyspace(name: "app_0") {
      name
      tables {
          name
          columns {
              name
              kind
              type {
                  basic
                  info {
                      name
                  }
              }
          }
      }
  }
}

mutation insertauth {
  test: insertauth(value: {
                    auth_id:"test1", 
                    auth_id_type:"username",
                    auth_id_type_username_pwd: "4a8a08f09d37b73795649038408b5f33",
                    user_id: "test1"
                  },
                  ifNotExists: true
                  ) {
          applied,
          accepted,
          value {
            auth_id,

          }
        }
}

query auth {
  auth: auth(value: {
                    auth_id:"test", 
                   
                  },
                  ) {
          pageState,
          values {
            auth_id,
						user_id,
            auth_id_type_username_pwd,
            create_time
          }
        }
}

#search all
query auth {
  auth: auth(filter: {
                  },
                  ) {
          pageState,
          values {
            auth_id,
            auth_id_type,
						user_id,
            auth_id_type_username_pwd,
            create_time
          }
        }
}

query auth($auth_id: String!) {
  auth: auth(value: {
                    auth_id: $auth_id, 
                    auth_id_type: "username"
                  },
                  ) {
          pageState,
          values {
            auth_id,
            auth_id_type,
						user_id,
            auth_id_type_username_pwd,
            create_time
          }
        }
}

mutation deleteauth($auth_id: String!) {
  deleteauth: deleteauth(value: {
                    auth_id: $auth_id, 
                    auth_id_type: "username"
                  },
    							ifExists: true
                  ) {
          applied,
    			accepted,
          value {
            auth_id,
            auth_id_type,
						user_id,
            auth_id_type_username_pwd,
            create_time
          }
        }
}